"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/poa-dapps-keys-generation/index.html","ec02a11e93677a79850c521d02dccb1a"],["/poa-dapps-keys-generation/static/css/main.5ecbb62e.css","e7706d5572109ecd6fd1cec4d673ee58"],["/poa-dapps-keys-generation/static/js/main.c088b547.js","043f55bdf7d66b19c962c21ddbe51313"],["/poa-dapps-keys-generation/static/media/bg_footer.c0181fba.png","c0181fbaa582e7c44f4c77fb50e1781b"],["/poa-dapps-keys-generation/static/media/bg_header.55fb6ae4.png","55fb6ae4101fe4617b5e6a3463c1e701"],["/poa-dapps-keys-generation/static/media/copy.3cdc75f3.png","3cdc75f3003bc76ad29517b20055004c"],["/poa-dapps-keys-generation/static/media/copy@2x.d47cd69c.png","d47cd69c027f0f324b81272274164dac"],["/poa-dapps-keys-generation/static/media/loading.938a017b.png","938a017bb1c09fbfd4a145390078ea25"],["/poa-dapps-keys-generation/static/media/loading@2x.48b1e766.png","48b1e766120ee42999e931e096cc815b"],["/poa-dapps-keys-generation/static/media/logo_ceremony_dapp.5d8763d3.png","5d8763d3c9ab9941ed753dc8158d3247"],["/poa-dapps-keys-generation/static/media/logo_ceremony_dapp@2x.26e7092b.png","26e7092beec8f19bedfce9c43f8feec3"],["/poa-dapps-keys-generation/static/media/logo_ceremony_dapp_footer.29cfa700.png","29cfa700bcd7fec3113ad5913922d558"],["/poa-dapps-keys-generation/static/media/logo_ceremony_dapp_footer@2x.2bceccf6.png","2bceccf60dbfb7861437bab7ce3cb69e"],["/poa-dapps-keys-generation/static/media/warning.4ba81241.svg","4ba81241140fa3db785eacddb80abdca"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,n,t,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),r=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),a="index.html";(n=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,a),n=urlsToCacheKeys.has(t));var r="/poa-dapps-keys-generation/index.html";!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(r,self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});